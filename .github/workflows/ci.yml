name: CI

on:
  pull_request:
    paths-ignore:
      - 'docs/**'
      - '**/*.md'
      - '.prettierrc'
      - '**/*ignore'
  push:
    branches:
      - master
      - next
      - rc
    paths-ignore:
      - 'docs/**'
      - '**/*.md'
      - '.prettierrc'
      - '**/*ignore'
  workflow_call:

env:
  NODE_VERSION: '20'

jobs:
  build-package:
    name: Build supabase-js package
    runs-on: ubuntu-latest
    outputs:
      tgz-name: ${{ steps.pack.outputs.filename }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install dependencies and build
        run: |
          pnpm install
          pnpm run build
          pnpm run build:umd

      - name: Pack npm module
        id: pack
        run: |
          pnpm pack > pack_output.txt 2>&1
          PKG=$(grep -E '\.tgz$' pack_output.txt | tail -1)
          echo "filename=$PKG" >> "$GITHUB_OUTPUT"

      - name: Upload .tgz package
        uses: actions/upload-artifact@v4
        with:
          name: supabase-tgz
          path: ${{ steps.pack.outputs.filename }}

      - name: Upload UMD build
        uses: actions/upload-artifact@v4
        with:
          name: supabase-umd
          path: dist/umd/supabase.js

  test:
    name: Unit + Type Check / Node.js ${{ matrix.node }} / OS ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node: [20]
        os: [ubuntu-latest, macos-latest, windows-latest]
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Type Check
        run: pnpm run test:types

      - name: Run Unit Tests + Coverage
        run: pnpm run test:coverage

      - name: Upload coverage results to Coveralls
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ./test/coverage/lcov.info

  deno-tests:
    name: Deno Tests / ${{ matrix.deno }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        deno: ['1.x', '2.x']
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: ${{ matrix.deno }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Start Supabase
        run: supabase start

      - name: Install dependencies and build module for Deno tests
        run: |
          pnpm install
          pnpm run build:module

      - name: Run Deno Tests
        run: |
          cd test/deno
          pnpm install
          pnpm test || pnpm test

      - name: Run integration and browser tests on Deno 2.x only
        if: ${{ matrix.deno == '2.x' }}
        run: pnpm run test:integration:browser

      - name: Stop Supabase
        if: always()
        run: supabase stop

  node-integration:
    name: Node Integration
    runs-on: ubuntu-latest
    needs: build-package
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Start Supabase
        run: supabase start

      - name: Install dependencies and build
        run: |
          pnpm install
          pnpm run build

      - name: Run integration tests
        run: pnpm run test:integration || pnpm run test:integration

      - name: Stop Supabase
        if: always()
        run: supabase stop

  next-integration:
    name: Next.js Integration
    runs-on: ubuntu-latest
    needs: build-package
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Start Supabase
        run: supabase start

      - name: Install Playwright browsers and dependencies
        run: npx playwright install --with-deps

      - name: Run integration tests
        run: |
          pnpm install
          cd test/integration/next
          npx playwright install
          pnpm test

      - name: Stop Supabase
        if: always()
        run: supabase stop

  expo-tests:
    name: Expo Tests
    runs-on: ubuntu-latest
    needs: build-package
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Start Supabase
        run: supabase start

      - name: Install dependencies and run tests
        run: |
          pnpm install
          cd test/integration/expo
          pnpm test || pnpm test

      - name: Stop Supabase
        if: always()
        run: supabase stop

  websocket-browser-tests:
    name: WebSocket Browser Tests
    runs-on: ubuntu-latest
    needs: build-package
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: supabase-umd
          path: ./dist/umd

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Install Playwright browsers and dependencies
        run: npx playwright install --with-deps

      - name: Start Supabase
        run: supabase start

      - name: Run WebSocket tests
        run: |
          pnpm install
          cd test/integration/node-browser
          cp ../../../dist/umd/supabase.js .
          pnpm test

      - name: Stop Supabase
        if: always()
        run: supabase stop
