name: CI

on:
  pull_request:
    paths-ignore:
      - 'docs/**'
      - '**/*.md'
      - '.prettierrc'
      - '**/*ignore'
  push:
    branches:
      - master
      - next
      - rc
    paths-ignore:
      - 'docs/**'
      - '**/*.md'
      - '.prettierrc'
      - '**/*ignore'

jobs:
  test:
    name: Unit + Type Check / Node.js ${{ matrix.node }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: ['20']

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}

      - run: npm clean-install

      - name: Type Check
        run: npm run test:types

      - name: Run Unit Tests + Coverage
        run: npm run test:coverage

      - name: Upload coverage results to Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ./test/coverage/lcov.info

  deno-tests:
    name: Deno Tests / ${{ matrix.deno }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        deno: ['1.x', '2.x']
    steps:
      - uses: actions/checkout@v4
      - uses: denoland/setup-deno@v2
        with:
          deno-version: ${{ matrix.deno }}
      - uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Start Supabase
        run: supabase start

      - name: Run Deno Tests
        run: |
          npm clean-install
          npm run build
          cd test/deno
          npm install
          npm test || npm test

      - name: Run integration and browser tests on Deno 2.x only
        if: ${{ matrix.deno == '2.x' }}
        run: |
          npm run test:integration || npm run test:integration
          npm run test:integration:browser

      - name: Stop Supabase
        run: supabase stop

  node-integration:
    name: Node Integration
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Start Supabase
        run: supabase start

      - name: Run integration tests
        run: |
          npm clean-install
          npm run build
          npm run test:integration || npm run test:integration

      - name: Stop Supabase
        run: supabase stop

  expo-tests:
    name: Expo Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Start Supabase
        run: |
          supabase start

      - name: Debug Supabase connectivity
        run: |
          echo "Checking HTTP endpoint with curl..."
          curl -v http://127.0.0.1:54321 || echo "curl failed"
    
          echo "Checking host.docker.internal resolution..."
          ping -c 3 host.docker.internal || echo "host.docker.internal not reachable"
    
          echo "Installing websocat for WebSocket test..."
          sudo apt-get update && sudo apt-get install -y websocat
    
          echo "Testing WebSocket connection to supabase realtime..."
          websocat -t ws://127.0.0.1:54321/realtime/v1/websocket || echo "WebSocket connection failed"
    
          echo "Displaying Supabase logs..."
          supabase logs --since 1m || echo "No logs or failed to fetch logs"

      - name: Build and test expo
        run: |
          npm clean-install
          npm run build
          PKG=$(npm pack)
          echo "Packed: $PKG"
          cd examples/expo-app
          npm install "../../$PKG"
          npm install
          npm test || npm test

      - name: Stop Supabase
        run: supabase stop
